{"version":3,"file":"static/js/39.c4a873d4.chunk.js","mappings":"mOAWMA,EAAUC,EAAAA,GAAAA,QAAH,4EAKPC,EAAUD,EAAAA,GAAAA,IAAH,0CAIPE,EAAQF,EAAAA,GAAAA,IAAH,uFA6EX,UAxEoB,WAClB,IAAQG,GAAaC,EAAAA,EAAAA,MAAbD,SACR,GAAgCE,EAAAA,EAAAA,UAAS,MAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACMC,GAAWC,EAAAA,EAAAA,MAYjB,IATAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAcR,GACXS,MAAK,SAAAC,GAEJN,EAAYM,EAAIC,SAEjBC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,QAC7B,CAACb,IAECG,EAAL,CAIA,IACEa,EAMEb,EANFa,YACAC,EAKEd,EALFc,eACAC,EAIEf,EAJFe,aACAC,EAGEhB,EAHFgB,SACAC,EAEEjB,EAFFiB,OACAC,EACElB,EADFkB,aAGIC,EAAcJ,EAAaK,MAAM,EAAG,GACpCC,EAAQJ,EAAOK,KAAI,qBAAGC,QAAiBC,KAAK,MAC5CC,EAAQC,OAAOR,GAClBS,MAAM,GAAI,GACVC,QAAO,SAAAC,GAAE,MAAW,MAAPA,KACbL,KAAK,IAER,OACE,6BACE,SAAC,KAAD,CAAMM,GAAI5B,EAAS6B,MAAMC,KAAzB,wBACA,SAACvC,EAAD,WACE,UAACE,EAAD,YACE,0BACE,SAACC,EAAD,CACEqC,IAAG,0CAAqCpB,GACxCqB,IAAI,uBAGR,4BACE,kCAAQpB,EAAR,aAA2BK,EAA3B,QACA,yCAAiBM,EAAjB,QACA,sCACA,uBAAIT,KACJ,oCACA,uBAAIK,aAIV,UAAC5B,EAAD,YACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAASqC,GAAG,OAAZ,qBAEF,yBACE,SAAC,KAAD,CAASA,GAAG,UAAZ,8BAIN,SAAC,KAAD","sources":["pages/FilmDetails.jsx"],"sourcesContent":["import { fetchSearchId } from 'Api/FetchApi';\nimport { useState, useEffect } from 'react';\nimport {\n  useParams,\n  Outlet,\n  NavLink,\n  Link,\n  useLocation,\n} from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Section = styled.section`\n  padding: 30px;\n  border-bottom: 3px solid grey;\n`;\n\nconst MainBox = styled.div`\n  display: flex;\n`;\n\nconst Image = styled.img`\n  display: block;\n  max-width: 250px;\n  margin-right: 50px;\n`;\nconst FilmDetails = () => {\n  const { moviesId } = useParams();\n  const [filmInfo, setFilmInfo] = useState(null);\n  const location = useLocation();\n  // console.log(location);\n\n  useEffect(() => {\n    fetchSearchId(moviesId)\n      .then(res => {\n        // console.log(res.data);\n        setFilmInfo(res.data);\n      })\n      .catch(error => console.log(error));\n  }, [moviesId]);\n\n  if (!filmInfo) {\n    return;\n  }\n\n  const {\n    poster_path,\n    original_title,\n    release_date,\n    overview,\n    genres,\n    vote_average,\n  } = filmInfo;\n\n  const releaseDate = release_date.slice(0, 4);\n  const genre = genres.map(({ name }) => name).join(', ');\n  const score = String(vote_average)\n    .split('', 3)\n    .filter(el => el !== '.')\n    .join('');\n\n  return (\n    <main>\n      <Link to={location.state.from}>Turn back</Link>\n      <Section>\n        <MainBox>\n          <div>\n            <Image\n              src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n              alt=\"Poster of movie\"\n            />\n          </div>\n          <div>\n            <h1>{`${original_title} (${releaseDate})`}</h1>\n            <h2>User Score: {score}%</h2>\n            <h2>Overview</h2>\n            <p>{overview}</p>\n            <h2>Genres</h2>\n            <p>{genre}</p>\n          </div>\n        </MainBox>\n      </Section>\n      <Section>\n        <h2>Additional information</h2>\n        <ul>\n          <li>\n            <NavLink to=\"cast\">Cast</NavLink>\n          </li>\n          <li>\n            <NavLink to=\"reviews\">Reviews</NavLink>\n          </li>\n        </ul>\n      </Section>\n      <Outlet />\n    </main>\n  );\n};\n\nexport default FilmDetails;\n"],"names":["Section","styled","MainBox","Image","moviesId","useParams","useState","filmInfo","setFilmInfo","location","useLocation","useEffect","fetchSearchId","then","res","data","catch","error","console","log","poster_path","original_title","release_date","overview","genres","vote_average","releaseDate","slice","genre","map","name","join","score","String","split","filter","el","to","state","from","src","alt"],"sourceRoot":""}